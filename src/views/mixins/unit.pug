mixin tooltip(tooltipSide, tooltipText)
    div(data-toggle="tooltip" data-placement=tooltipSide, title=tooltipText)
        block

mixin tooltippedAbility(tooltipSide, ability)
    - const abilityNameDisplay = ability.length > 0 ? ability : '(none)';
    - const abilityInfo = abilities[ability] || { name: ability, info: '' };
    +tooltip(tooltipSide, abilityInfo.info)
        div= abilityNameDisplay
    

mixin tooltippedAbilityWithSlot(tooltipSide, slot, ability)
    - const abilityNameDisplay = ability.length > 0 ? ability : '(none)';
    - const abilityInfo = abilities[ability] || { name: ability, info: '' };
    +tooltip(tooltipSide, abilityInfo.info)
        .d-inline-flex.align-items-center
            img.ability-icon(src=`/images/${slot}.png`)
            div= abilityNameDisplay

mixin tooltippedItem(tooltipSide, gear)
    - const gearInfo = items[gear.name] || { name: gear.name, info: '', slot: '' };
    +tooltip(tooltipSide, gearInfo.info)
        .d-inline-flex.align-items-center
            img.ability-icon(src=`/images/${gearInfo.slot}.png`)
            span= gearInfo.name

mixin unit(side, unit)
    - const tooltipSide = side === 'left' ? 'right' : 'left';
    - const spacelessClassName = unit.class === 'Floating Eye' ? unit.class : unit.class.replace(' ', '');
    - const className = spacelessClassName.startsWith('Calculator') ? 'Calculator' : spacelessClassName;
    - const unitClassInfo = classes[className][unit.gender]
    - const activeInnates = unitClassInfo.innates.filter((innate) => !abilities[innate]);
    - const nonActiveInnates = unitClassInfo.innates.filter((innate) => abilities[innate] && abilities[innate].type !== 'active');
    tr.unit-row
        td
            .d-flex.flex-column
            div= unit.name
            div= unit.gender
            +tooltip(tooltipSide, unitClassInfo.raw)
                div.font-weight-bold= unit.class
            div= unit.zodiac
        td= unit.brave + '/' + unit.faith
        td
            .d-flex.flex-column
            each gear in unit.UnitEquipments
                +tooltippedItem(tooltipSide, gear)
        td
            .d-flex.flex-column
                if unit.gender !== 'Monster'
                    if activeInnates.length > 0
                        each innate in activeInnates
                            +tooltippedAbilityWithSlot(tooltipSide, 'active', innate)
                    +tooltippedAbilityWithSlot(tooltipSide, 'active', unit.subSkill)
                    +tooltippedAbilityWithSlot(tooltipSide, 'react', unit.reactSkill)
                    +tooltippedAbilityWithSlot(tooltipSide, 'support', unit.supportSkill)
                    +tooltippedAbilityWithSlot(tooltipSide, 'move', unit.moveSkill)
                if nonActiveInnates.length > 0
                    div.font-weight-bold= "Innates:"
                    each innate in nonActiveInnates
                        - const innateAbilityType = abilities[innate] && abilities[innate].type;
                        +tooltippedAbilityWithSlot(tooltipSide, innateAbilityType || 'support', innate)

        td
            .d-flex.flex-column
                if unit.gender !== 'Monster'
                    each ability in unit.UnitAbilities.filter(a => a.mainOrSub === 'main')
                        +tooltippedAbility(tooltipSide, ability.name)

        td
            .d-flex.flex-column
                if unit.gender !== 'Monster'
                    each ability in unit.UnitAbilities.filter(a => a.mainOrSub === 'sub')
                        +tooltippedAbility(tooltipSide, ability.name)